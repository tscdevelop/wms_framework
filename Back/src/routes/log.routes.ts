import { Router } from 'express';
import { authenticateToken } from '../common/auth.token';
import * as transactionLogController from '../controllers/log.controller';

const router = Router();

/**
 * @swagger
 * tags:
 *   name: TransactionLog
 *   description: ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Log ‡∏Ç‡∏≠‡∏á Transaction
 */

/**
 * @swagger
 * /api/transaction-log/create:
 *   post:
 *     summary: ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Log ‡∏Ç‡∏≠‡∏á Transaction
 *     description: |
 *       ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á Transaction ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
 *       - üìå **log_type** (‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á Transaction) ‚Üí `INBOUND`, `OUTBOUND`
 *       - üìå **log_ctgy** (‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà) ‚Üí `RAW_MATERIAL`, `FINISHED_GOODS`, `TOOLING`, `SEMI`
 *       - üìå **log_action** (‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£) ‚Üí `CREATED`, `UPDATED`, `DELETED`, `RETURNED`
 *       - üìå **ref_id** (‡πÑ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á) ‚Üí ‡πÄ‡∏ä‡πà‡∏ô `inbrm_id=1`
 *       - üìå **transaction_data** (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î) ‚Üí ‡πÄ‡∏ä‡πà‡∏ô `{ "quantity": 50, "location": "Warehouse A" }`
 *     tags: [TransactionLog]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - log_type
 *               - log_ctgy
 *               - log_action
 *               - ref_id
 *             properties:
 *               log_type:
 *                 type: string
 *                 description: ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á Transaction (INBOUND, OUTBOUND)
 *                 enum: [INBOUND, OUTBOUND]
 *                 example: "INBOUND"
 *               log_ctgy:
 *                 type: string
 *                 description: ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà ‡πÄ‡∏ä‡πà‡∏ô RAW_MATERIAL, FINISHED_GOODS, TOOLING, SEMI
 *                 enum: [RAW_MATERIAL, FINISHED_GOODS, TOOLING, SEMI]
 *                 example: "RAW_MATERIAL"
 *               log_action:
 *                 type: string
 *                 description: ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ (CREATED, UPDATED, DELETED, RETURNED)
 *                 enum: [CREATED, UPDATED, DELETED, RETURNED]
 *                 example: "CREATED"
 *               ref_id:
 *                 type: number
 *                 description: ‡πÑ‡∏≠‡∏î‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏≠‡πâ‡∏≤‡∏á‡∏ñ‡∏∂‡∏á
 *                 example: 1
 *               transaction_data:
 *                 type: object
 *                 description: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
 *                 example: { "quantity": 50, "location": "Warehouse A" }
 *     responses:
 *       201:
 *         description: ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
 *       400:
 *         description: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô
 *       500:
 *         description: ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
 */
router.post('/create', authenticateToken, transactionLogController.create);

export default router;
